@model QuestionViewModel
@{
    ViewData["Title"] = "Exam Question";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<!-- Your custom CSS -->
<link rel="stylesheet" href="@(Url.Content("~/css/QuestionView.css"))?v=1" />

<div class="container mt-5">

    <!-- Header -->
    <div class="quiz-header">
        <div>
            <h4><strong>@Model.ExamTitle</strong> Exam</h4>
        </div>
        <div>
            <h2>⏱️<h6 id="timer">Loading...</h6></h2>
        </div>
    </div>

    <!-- Progress Bar -->
    <div class="progress mb-4">
        <div class="progress-bar" role="progressbar" style="width: @Model.Progress%" aria-valuenow="@Model.Progress" aria-valuemin="0" aria-valuemax="100"></div>
        <span class="badge bg-secondary">@Model.Progress%</span>
    </div>

    <!-- Quiz Card -->
    <div class="quiz-card">
        <form method="post" asp-action="SubmitAnswer" asp-controller="Exam" id="examForm">
            <input type="hidden" name="ExamID" value="@Model.ExamID" />
            <input type="hidden" name="QuestionID" value="@Model.QuestionID" />
            <input type="hidden" name="QuestionIndex" value="@Model.QuestionIndex" />
            <input type="hidden" asp-for="IsLastQuestion" />

            <p>Question @Model.QuestionNumber 
                <span class="text-muted mb-5">(Degree: @Model.QuestionDegree)</span>
            </p><br />

            <h4>@Model.QuestionText</h4><br /><br />

            @foreach (var choice in Model.Choices)
            {
                <label class="custom-choice" for="choice_@choice.ChoiceID">
                    <input class="form-check-input" type="radio"
                           name="SelectedChoiceID"
                           id="choice_@choice.ChoiceID"
                           value="@choice.ChoiceID"
                    @(Model.SelectedChoiceID == choice.ChoiceID ? "checked" : "") />
                    <span class="checkmark"></span>
                    <span class="choice-text">@choice.ChoiceText</span>
                </label>
            }

            <br />
            <div class="quiz-controls">
                <a asp-action="Question" asp-route-examId="@Model.ExamID" asp-route-index="@(Model.QuestionIndex - 1)"
                   class="btn btn-outline-secondary @(Model.QuestionIndex == 0 ? "disabled" : "")"> Previous</a>

                @if (Model.IsLastQuestion)
                {
                    <button type="submit" class="btn btn-success">Finish</button>
                }
                else
                {
                    <button type="submit" class="btn btn-dark next">Next</button>
                }
            </div>
        </form>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="timeUpModal" tabindex="-1" aria-labelledby="timeUpLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center">
            <div class="modal-header">
                <h5 class="modal-title w-100" id="timeUpLabel">Time's Up</h5>
            </div>
            <div class="modal-body">
                Your exam time has expired. You will be redirected to the summary page.
            </div>
        </div>
    </div>
</div>



<!-- Timer & Validation -->
<script>
    const EXAM_KEY = "exam_timer_@Model.ExamID";
    const examDurationSeconds = @Model.TimeRemaining * 60;
    let timeLeft;

    if (sessionStorage.getItem(EXAM_KEY)) {
        timeLeft = parseInt(sessionStorage.getItem(EXAM_KEY));
    } else {
        timeLeft = examDurationSeconds;
        sessionStorage.setItem(EXAM_KEY, timeLeft);
    }

        function updateTimer() {
        if (timeLeft <= 0) {
            sessionStorage.removeItem(EXAM_KEY);

            // Show modal instead of alert
            var timeUpModal = new bootstrap.Modal(document.getElementById('timeUpModal'));
            timeUpModal.show();

            // Redirect after a short delay
            setTimeout(function () {
                window.location.href = "/Exam/Summary?examId=@Model.ExamID";
            }, 3000); // 3 seconds
            return;
        }

        const minutes = Math.floor(timeLeft / 60).toString().padStart(2, '0');
        const seconds = (timeLeft % 60).toString().padStart(2, '0');
        document.getElementById("timer").innerText = `${minutes}:${seconds}`;
        timeLeft--;
        sessionStorage.setItem(EXAM_KEY, timeLeft);
    }


    setInterval(updateTimer, 1000);

    // Prevent submit without selecting answer
    document.getElementById("examForm").addEventListener("submit", function (e) {
        const selected = document.querySelector('input[name="SelectedChoiceID"]:checked');
        if (!selected) {
            alert("⚠️ Please select an answer before continuing.");
            e.preventDefault();
        }
    });
</script>
