@model ITI.ExamSystem.Models.StudentIndexViewModel
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Students";
    Layout = "_Layout"; // Use the custom admin layout
}

<div class="content-container">
    <div class="welcome-section">
        <a asp-action="CreateStudent" class="createStudent">Add New Student</a>

        <table class="table table-bordered  table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Branch</th>
                    <th>Track</th>
                    <th>Intake</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model.Students)
                {
                    <tr>
                        <td>@student.UserID</td>
                        <td>
                            @{
                                var fullName = student.FullName;
                                if (!string.IsNullOrEmpty(ViewBag.searchTerm))
                                {
                                    var searchTerm = ViewBag.searchTerm as string;
                                    fullName = fullName.Replace(searchTerm, $"<strong>{searchTerm}</strong>", StringComparison.OrdinalIgnoreCase);
                                }
                                @Html.Raw(fullName)
                            }
                        </td>
                        <td>@student.Email</td>
                        <td>@student.BranchName</td>
                        <td>
                            @foreach (var track in student.Tracks.Split(","))
                            {
                                <div>@track.Trim()</div>
                            }
                        </td>
                        <td>
                            @foreach (var intake in student.Intakes.Split(","))
                            {
                                <div>@intake.Trim()</div>
                            }
                        </td>
                        <td>
                            <a asp-action="EditStudent" asp-route-id="@student.UserID" class="btn  btn-md">📝</a>
                            <a asp-action="DeleteStudent" asp-route-id="@student.UserID" class="btn btn-sm">❌</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <!-- Pagination -->
        <nav aria-label="Student pagination">
            <ul class="pagination justify-content-center">
                @for (int page = 1; page <= Model.TotalPages; page++)
                {
                    <li class="page-item @(page == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="SearchStudents" asp-route-page="@(page)" asp-route-searchTerm="@ViewBag.searchTerm">@(page)</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
<!-- Deleted Instructors -->
@if (Model.DeletedStudents.Any())
{
    <h4 class="mt-5">Inactive Students</h4>
    <table class="table table-bordered table-striped">
        <thead class="table-secondary">
            <tr>
                <th>#</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in Model.DeletedStudents)
                {
                    <tr>
                        <td>@item.UserID</td>
                        <td>@item.FullName</td>
                        <td>@item.Email</td>
                        <td>
                            <form asp-action="ReactivateStudent" asp-route-id="@item.UserID" method="post" style="display:inline">
                                <button type="submit" class="btn btn-success btn-sm">Reactivate</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
<style>
    .pagination .page-link {
        background-color: white; /* dark background */
        color: #7b61ff; /* white text */
        border: 1px solid #dee2e6;
    }

        .pagination .page-link:hover {
            background-color: #7b61ff; /* slightly lighter on hover */
            color: #fff;
        }

    .pagination .page-item.active .page-link {
        background-color: #7b61ff; /* green for active */
        border-color: #7b61ff;
        color: white;
    }

    .pagination .page-item.disabled .page-link {
        background-color: white;
        color: white;
        pointer-events: none;
    }
</style>
