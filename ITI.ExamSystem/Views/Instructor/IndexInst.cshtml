@model ITI.ExamSystem.Models.InstructorIndexViewModel
@{
    ViewData["Title"] = "Instructors";
    var i = (Model.CurrentPage - 1) * 10 + 1;
}
<div class="content-container">
    <div class="welcome-section">
          <a asp-action="Create" class="createInst">Add Instructor</a>

          <table class="table table-bordered table-striped">
            <thead class="table-dark">
               <tr>
                   <th>#</th>
                   <th>Full Name</th>
                   <th>Email</th>
                   <th>Branch</th>
                   <th>Tracks</th>
                   <th>Intakes</th>
                   <th>Actions</th>
               </tr>
            </thead>
   <tbody>
        @foreach (var inst in Model.Instructors)
        {
            <tr>
                <td>@inst.UserID</td>
                <td>
                    @{
                        var fullName = inst.FullName;
                        if (!string.IsNullOrEmpty(ViewBag.searchTerm))
                        {
                            var searchTerm = ViewBag.searchTerm as string;
                            fullName = fullName.Replace(searchTerm, $"<strong>{searchTerm}</strong>", StringComparison.OrdinalIgnoreCase);
                        }
                        @Html.Raw(fullName)
                    }
                </td>
=======
                <td>@i</td>
                <td>@inst.FullName</td>
>>>>>>> 2138ae456048df4d01452bf4b2520ddbfdd6bc67:ITI.ExamSystem/Views/Instructor/Index.cshtml
                <td>@inst.Email</td>
                <td>@inst.BranchName</td>
                <td>
                    @foreach (var track in inst.Tracks.Split(","))
                    {
                        <div>@track.Trim()</div>
                    }
                </td>
                <td>
                    @foreach (var intake in inst.Intakes.Split(","))
                    {
                        <div>@intake.Trim()</div>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@inst.UserID" class="btn  btn-md">📝</a>
                    <a asp-action="Delete" asp-route-id="@inst.UserID" class="btn btn-sm">❌</a>
                </td>
            </tr>
            i++;
        }
    </tbody>
</table>

<!-- Pagination -->
<nav aria-label="Instructor pagination">
    <ul class="pagination justify-content-center">
        @for (int page = 1; page <= Model.TotalPages; page++)
        {
            <li class="page-item @(page == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="IndexInst" asp-route-page="@(page)" asp-route-searchTerm="@ViewBag.searchTerm">@(page)</a>
            </li>
        }
    </ul>
</nav>
</div>
</div>
<!-- Deleted Instructors -->
@if (Model.DeletedInstructors.Any())
{
    <h4 class="mt-5">Inactive Instructors</h4>
    <table class="table table-bordered table-striped">
        <thead class="table-secondary">
            <tr>
                <th>#</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                int j = 1;
                foreach (var item in Model.DeletedInstructors)
                {
                    <tr>
                        <td>@j</td>
                        <td>@item.FullName</td>
                        <td>@item.Email</td>
                        <td>
                            <form asp-action="Reactivate" asp-route-id="@item.UserID" method="post" style="display:inline">
                                <button type="submit" class="btn btn-success btn-sm">Reactivate</button>
                            </form>
                        </td>
                    </tr>
                    j++;
                }
            }
        </tbody>
    </table>
}